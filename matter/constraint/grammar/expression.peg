Term <- negative:'-'? '(' _ exp:Expression _ ')' {
	debug("found term add/subtract %s\n", string(c.text))
	if negative != nil {
		return &MathExpressionLimit{
			Operand:"*",
			Left:&IntLimit{Value:-1},
			Right:exp.(Limit),
		}, nil
	}
    return exp, nil
} / exp:(Expression) {
	debug("found term expression %s\n", string(c.text))
    return exp, nil
}

Expression <- left:(ExpressionLimit) _ operand:('+'/'-'/'*'/'/') _ right:Limit {
	debug("found expression %s\n", string(c.text))
	var val []uint8
	for _, d := range operand.([]uint8) {
		val = append(val, d)
	}
	return &MathExpressionLimit{
		Operand:string(val),
		Left:left.(Limit),
		Right:right.(Limit),
	}, nil
}

ExpressionLimit <- ( NullLimit / EmptyLimit / MinOfLimit / MaxOfLimit / StringLimit / BooleanLimit / StatusCodeLimit / HexLimit / TempLimit / IntLimit /  ReferenceLimit / IdentifierLimit)